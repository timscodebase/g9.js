import g9 from "g9"

var data = {
    "t": 0
}

function render(data, ctx){
    var t = data.t;

    // tick marks
    for(var i = 0; i < 10; i++){
        ctx.line(i * 80, 10, i * 80, -10)
    }
    
    // slider nub
    ctx.circle(80 * t, 0)

    
    // show current value
    ctx.text('t = ' + t.toFixed(2), 0, 30)
    
    // projectile motion
    var vx = 100,
        vy = -200,
        ay = 50;
    
    ctx.circle(t * vx, t * vy + t*t*ay - 100, {
        fill: "orange",
        r: 10,
        trail: true
    })
    
    // second ball
    var vx = 120,
        vy = -80,
        ay = 20;
    
    ctx.circle(t * vx, t * vy + t*t*ay - 100, {
        fill: "blue",
        r: 10,
        trail: true
    })
}

function change(new_data){ 
    draw_trails(graphics)
}

var graphics = g9(data, render, change)
    .align('left', 'center')
    .insertInto('#root')




function draw_trails(g){
    if(!g) return;
    var children = g.node.childNodes;
    for(var i = 0; i < children.length; i++){
        if(children[i].isClone || !children[i].getAttribute('trail')) continue;
        var clone = children[i].cloneNode(true)
        clone.isClone = true;
        clone.setAttribute('opacity', '0.1')
        clone.setAttribute('r', '3')
        clone.setAttribute('pointer-events', 'none')
        g.node.appendChild(clone)   
    }
}



function ease(t) { return t<.5 ? 2*t*t : -1+(4-2*t)*t }

setInterval(function(){
    if(!graphics.isManipulating()){
        var data = graphics.getData()
        data.t = (data.t + 0.01) % 10
        graphics.setData(data)    
    }
}, 50)

